generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String  @id @default(cuid())
  email     String  @unique
  avatarUrl String?

  password Password?

  isConfirmed Boolean @default(false)

  payment UserPayment?
  paymentHistory UserPaymentHistory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique

  @@index([userId])
}

model UserPayment {
  id                    String   @id @default(uuid())
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                String   @unique
  subscriptionId        String   @unique
  subscriptionPlanId    String
  subscriptionEndDate   DateTime
  subscriptionStatus    String
  subscriptionUpdateUrl String
  subscriptionCancelUrl String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@index([userId])
}

model UserPaymentHistory {
  id                    String   @id @default(uuid())
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                String   @unique
  alert_name            String
  historyData           Json

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@index([userId])
}

model Feedback {
  id                    String   @id @default(uuid())
  userEmail             String
  userId                String
  feedback              String   @db.Text

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}
