generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(cuid())
  email     String  @unique

  password Password?

  payment        UserPayment?
  paymentHistory UserPaymentHistory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model UserPayment {
  id                    String   @id @default(uuid())
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                String   @unique
  subscriptionId        String   @unique
  subscriptionPlanId    String
  subscriptionEndDate   DateTime
  subscriptionStatus    String
  subscriptionUpdateUrl String
  subscriptionCancelUrl String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model UserPaymentHistory {
  id                    String    @id @default(uuid())
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                String
  status                String
  subscriptionId        String
  subscriptionPaymentId String    @unique
  subscriptionPlanId    String
  currency              String?
  amount                String?
  amountTax             String?
  paddleFee             String?
  paymentMethod         String?
  receiptUrl            String?
  attemptNumber         String?
  nextRetryDate         DateTime?
  refundReason          String?
  refundType            String?
  customerName          String?
  userCountry           String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

}
